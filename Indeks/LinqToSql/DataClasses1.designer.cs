#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.17929
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Indeks.LinqToSql
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Indeks for learn")]
	public partial class DataClasses1DataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertLista(Lista instance);
    partial void UpdateLista(Lista instance);
    partial void DeleteLista(Lista instance);
    partial void InsertListaStudent(ListaStudent instance);
    partial void UpdateListaStudent(ListaStudent instance);
    partial void DeleteListaStudent(ListaStudent instance);
    partial void InsertStudent(Student instance);
    partial void UpdateStudent(Student instance);
    partial void DeleteStudent(Student instance);
    #endregion
		
		public DataClasses1DataContext() : 
				base(global::Indeks.Properties.Settings.Default.Indeks_for_learnConnectionString1, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Lista> Listas
		{
			get
			{
				return this.GetTable<Lista>();
			}
		}
		
		public System.Data.Linq.Table<ListaStudent> ListaStudents
		{
			get
			{
				return this.GetTable<ListaStudent>();
			}
		}
		
		public System.Data.Linq.Table<Student> Students
		{
			get
			{
				return this.GetTable<Student>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Lista")]
	public partial class Lista : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Id_Semestr;
		
		private string _Nazwa;
		
		private string _Przedmiot;
		
		private string _Wykladowca;
		
		private string _Zajecia;
		
		private int _LGodzin;
		
		private int _PunktyETCS;
		
		private EntitySet<ListaStudent> _ListaStudents;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_SemestrChanging(System.Guid value);
    partial void OnId_SemestrChanged();
    partial void OnNazwaChanging(string value);
    partial void OnNazwaChanged();
    partial void OnPrzedmiotChanging(string value);
    partial void OnPrzedmiotChanged();
    partial void OnWykladowcaChanging(string value);
    partial void OnWykladowcaChanged();
    partial void OnZajeciaChanging(string value);
    partial void OnZajeciaChanged();
    partial void OnLGodzinChanging(int value);
    partial void OnLGodzinChanged();
    partial void OnPunktyETCSChanging(int value);
    partial void OnPunktyETCSChanged();
    #endregion
		
		public Lista()
		{
			this._ListaStudents = new EntitySet<ListaStudent>(new Action<ListaStudent>(this.attach_ListaStudents), new Action<ListaStudent>(this.detach_ListaStudents));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_Semestr", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid Id_Semestr
		{
			get
			{
				return this._Id_Semestr;
			}
			set
			{
				if ((this._Id_Semestr != value))
				{
					this.OnId_SemestrChanging(value);
					this.SendPropertyChanging();
					this._Id_Semestr = value;
					this.SendPropertyChanged("Id_Semestr");
					this.OnId_SemestrChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nazwa", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Nazwa
		{
			get
			{
				return this._Nazwa;
			}
			set
			{
				if ((this._Nazwa != value))
				{
					this.OnNazwaChanging(value);
					this.SendPropertyChanging();
					this._Nazwa = value;
					this.SendPropertyChanged("Nazwa");
					this.OnNazwaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Przedmiot", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Przedmiot
		{
			get
			{
				return this._Przedmiot;
			}
			set
			{
				if ((this._Przedmiot != value))
				{
					this.OnPrzedmiotChanging(value);
					this.SendPropertyChanging();
					this._Przedmiot = value;
					this.SendPropertyChanged("Przedmiot");
					this.OnPrzedmiotChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Wykladowca", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Wykladowca
		{
			get
			{
				return this._Wykladowca;
			}
			set
			{
				if ((this._Wykladowca != value))
				{
					this.OnWykladowcaChanging(value);
					this.SendPropertyChanging();
					this._Wykladowca = value;
					this.SendPropertyChanged("Wykladowca");
					this.OnWykladowcaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Zajecia", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Zajecia
		{
			get
			{
				return this._Zajecia;
			}
			set
			{
				if ((this._Zajecia != value))
				{
					this.OnZajeciaChanging(value);
					this.SendPropertyChanging();
					this._Zajecia = value;
					this.SendPropertyChanged("Zajecia");
					this.OnZajeciaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LGodzin", DbType="Int NOT NULL")]
		public int LGodzin
		{
			get
			{
				return this._LGodzin;
			}
			set
			{
				if ((this._LGodzin != value))
				{
					this.OnLGodzinChanging(value);
					this.SendPropertyChanging();
					this._LGodzin = value;
					this.SendPropertyChanged("LGodzin");
					this.OnLGodzinChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PunktyETCS", DbType="Int NOT NULL")]
		public int PunktyETCS
		{
			get
			{
				return this._PunktyETCS;
			}
			set
			{
				if ((this._PunktyETCS != value))
				{
					this.OnPunktyETCSChanging(value);
					this.SendPropertyChanging();
					this._PunktyETCS = value;
					this.SendPropertyChanged("PunktyETCS");
					this.OnPunktyETCSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Lista_ListaStudent", Storage="_ListaStudents", ThisKey="Id_Semestr", OtherKey="Id_Semestr")]
		public EntitySet<ListaStudent> ListaStudents
		{
			get
			{
				return this._ListaStudents;
			}
			set
			{
				this._ListaStudents.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ListaStudents(ListaStudent entity)
		{
			this.SendPropertyChanging();
			entity.Lista = this;
		}
		
		private void detach_ListaStudents(ListaStudent entity)
		{
			this.SendPropertyChanging();
			entity.Lista = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ListaStudent")]
	public partial class ListaStudent : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Id_Semestr;
		
		private System.Guid _Id_Student;
		
		private EntityRef<Lista> _Lista;
		
		private EntityRef<Student> _Student;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_SemestrChanging(System.Guid value);
    partial void OnId_SemestrChanged();
    partial void OnId_StudentChanging(System.Guid value);
    partial void OnId_StudentChanged();
    #endregion
		
		public ListaStudent()
		{
			this._Lista = default(EntityRef<Lista>);
			this._Student = default(EntityRef<Student>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_Semestr", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid Id_Semestr
		{
			get
			{
				return this._Id_Semestr;
			}
			set
			{
				if ((this._Id_Semestr != value))
				{
					if (this._Lista.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnId_SemestrChanging(value);
					this.SendPropertyChanging();
					this._Id_Semestr = value;
					this.SendPropertyChanged("Id_Semestr");
					this.OnId_SemestrChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_Student", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid Id_Student
		{
			get
			{
				return this._Id_Student;
			}
			set
			{
				if ((this._Id_Student != value))
				{
					if (this._Student.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnId_StudentChanging(value);
					this.SendPropertyChanging();
					this._Id_Student = value;
					this.SendPropertyChanged("Id_Student");
					this.OnId_StudentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Lista_ListaStudent", Storage="_Lista", ThisKey="Id_Semestr", OtherKey="Id_Semestr", IsForeignKey=true)]
		public Lista Lista
		{
			get
			{
				return this._Lista.Entity;
			}
			set
			{
				Lista previousValue = this._Lista.Entity;
				if (((previousValue != value) 
							|| (this._Lista.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Lista.Entity = null;
						previousValue.ListaStudents.Remove(this);
					}
					this._Lista.Entity = value;
					if ((value != null))
					{
						value.ListaStudents.Add(this);
						this._Id_Semestr = value.Id_Semestr;
					}
					else
					{
						this._Id_Semestr = default(System.Guid);
					}
					this.SendPropertyChanged("Lista");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Student_ListaStudent", Storage="_Student", ThisKey="Id_Student", OtherKey="Id_Student", IsForeignKey=true)]
		public Student Student
		{
			get
			{
				return this._Student.Entity;
			}
			set
			{
				Student previousValue = this._Student.Entity;
				if (((previousValue != value) 
							|| (this._Student.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Student.Entity = null;
						previousValue.ListaStudents.Remove(this);
					}
					this._Student.Entity = value;
					if ((value != null))
					{
						value.ListaStudents.Add(this);
						this._Id_Student = value.Id_Student;
					}
					else
					{
						this._Id_Student = default(System.Guid);
					}
					this.SendPropertyChanged("Student");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Student")]
	public partial class Student : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Id_Student;
		
		private string _haslo;
		
		private string _imie;
		
		private string _nazwisko;
		
		private string _telefon;
		
		private string _login;
		
		private EntitySet<ListaStudent> _ListaStudents;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_StudentChanging(System.Guid value);
    partial void OnId_StudentChanged();
    partial void OnhasloChanging(string value);
    partial void OnhasloChanged();
    partial void OnimieChanging(string value);
    partial void OnimieChanged();
    partial void OnnazwiskoChanging(string value);
    partial void OnnazwiskoChanged();
    partial void OntelefonChanging(string value);
    partial void OntelefonChanged();
    partial void OnloginChanging(string value);
    partial void OnloginChanged();
    #endregion
		
		public Student()
		{
			this._ListaStudents = new EntitySet<ListaStudent>(new Action<ListaStudent>(this.attach_ListaStudents), new Action<ListaStudent>(this.detach_ListaStudents));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_Student", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid Id_Student
		{
			get
			{
				return this._Id_Student;
			}
			set
			{
				if ((this._Id_Student != value))
				{
					this.OnId_StudentChanging(value);
					this.SendPropertyChanging();
					this._Id_Student = value;
					this.SendPropertyChanged("Id_Student");
					this.OnId_StudentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_haslo", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string haslo
		{
			get
			{
				return this._haslo;
			}
			set
			{
				if ((this._haslo != value))
				{
					this.OnhasloChanging(value);
					this.SendPropertyChanging();
					this._haslo = value;
					this.SendPropertyChanged("haslo");
					this.OnhasloChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_imie", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string imie
		{
			get
			{
				return this._imie;
			}
			set
			{
				if ((this._imie != value))
				{
					this.OnimieChanging(value);
					this.SendPropertyChanging();
					this._imie = value;
					this.SendPropertyChanged("imie");
					this.OnimieChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nazwisko", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string nazwisko
		{
			get
			{
				return this._nazwisko;
			}
			set
			{
				if ((this._nazwisko != value))
				{
					this.OnnazwiskoChanging(value);
					this.SendPropertyChanging();
					this._nazwisko = value;
					this.SendPropertyChanged("nazwisko");
					this.OnnazwiskoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_telefon", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string telefon
		{
			get
			{
				return this._telefon;
			}
			set
			{
				if ((this._telefon != value))
				{
					this.OntelefonChanging(value);
					this.SendPropertyChanging();
					this._telefon = value;
					this.SendPropertyChanged("telefon");
					this.OntelefonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_login", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string login
		{
			get
			{
				return this._login;
			}
			set
			{
				if ((this._login != value))
				{
					this.OnloginChanging(value);
					this.SendPropertyChanging();
					this._login = value;
					this.SendPropertyChanged("login");
					this.OnloginChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Student_ListaStudent", Storage="_ListaStudents", ThisKey="Id_Student", OtherKey="Id_Student")]
		public EntitySet<ListaStudent> ListaStudents
		{
			get
			{
				return this._ListaStudents;
			}
			set
			{
				this._ListaStudents.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ListaStudents(ListaStudent entity)
		{
			this.SendPropertyChanging();
			entity.Student = this;
		}
		
		private void detach_ListaStudents(ListaStudent entity)
		{
			this.SendPropertyChanging();
			entity.Student = null;
		}
	}
}
#pragma warning restore 1591
